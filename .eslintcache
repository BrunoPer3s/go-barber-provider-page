[{"C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\pages\\SignIn\\index.tsx":"1","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\pages\\SignUp\\index.tsx":"2","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\pages\\SignIn\\style.ts":"3","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\pages\\SignUp\\styles.ts":"4","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\hooks\\Auth.tsx":"5","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\styles\\global.ts":"6","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\hooks\\Toast.tsx":"7","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\components\\button\\index.tsx":"8","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\components\\input\\style.ts":"9","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\components\\button\\style.ts":"10","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\components\\input\\index.tsx":"11","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\routes\\index.tsx":"12","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\pages\\Dashboard\\styles.ts":"13","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\routes\\Route.tsx":"14","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\pages\\Dashboard\\index.tsx":"15","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\components\\Tooltip\\index.tsx":"16","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\pages\\ForgotPassword\\style.ts":"17","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\pages\\ForgotPassword\\index.tsx":"18","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\index.tsx":"19","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\hooks\\index.tsx":"20","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\services\\api.ts":"21","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\components\\ToastContainer\\styles.ts":"22","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\components\\Toast\\index.tsx":"23","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\components\\Tooltip\\styles.ts":"24","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\components\\Toast\\styles.ts":"25","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\components\\ToastContainer\\index.tsx":"26","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\pages\\ResetPassword\\style.ts":"27","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\pages\\ResetPassword\\index.tsx":"28","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\pages\\Profile\\index.tsx":"29","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\pages\\Profile\\style.ts":"30","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\App.tsx":"31","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\utils\\getValidationErrors.ts":"32"},{"size":2843,"mtime":1612460216017,"results":"33","hashOfConfig":"34"},{"size":2807,"mtime":1608089107978,"results":"35","hashOfConfig":"34"},{"size":1504,"mtime":1608045314688,"results":"36","hashOfConfig":"34"},{"size":1577,"mtime":1608045630344,"results":"37","hashOfConfig":"34"},{"size":2289,"mtime":1612630283582,"results":"38","hashOfConfig":"34"},{"size":477,"mtime":1608560965281,"results":"39","hashOfConfig":"34"},{"size":1470,"mtime":1607983057394,"results":"40","hashOfConfig":"34"},{"size":416,"mtime":1612377520111,"results":"41","hashOfConfig":"34"},{"size":1368,"mtime":1608044700610,"results":"42","hashOfConfig":"34"},{"size":421,"mtime":1612377636248,"results":"43","hashOfConfig":"34"},{"size":1588,"mtime":1607695300480,"results":"44","hashOfConfig":"34"},{"size":768,"mtime":1612379930781,"results":"45","hashOfConfig":"34"},{"size":4767,"mtime":1612556918016,"results":"46","hashOfConfig":"34"},{"size":793,"mtime":1608088418123,"results":"47","hashOfConfig":"34"},{"size":7621,"mtime":1612556745572,"results":"48","hashOfConfig":"34"},{"size":371,"mtime":1607695416052,"results":"49","hashOfConfig":"34"},{"size":1504,"mtime":1612362348334,"results":"50","hashOfConfig":"34"},{"size":2855,"mtime":1612377539012,"results":"51","hashOfConfig":"34"},{"size":200,"mtime":1607367197862,"results":"52","hashOfConfig":"34"},{"size":317,"mtime":1607960117450,"results":"53","hashOfConfig":"34"},{"size":120,"mtime":1607785632057,"results":"54","hashOfConfig":"34"},{"size":173,"mtime":1607979126913,"results":"55","hashOfConfig":"34"},{"size":1218,"mtime":1612625452688,"results":"56","hashOfConfig":"34"},{"size":840,"mtime":1607696664784,"results":"57","hashOfConfig":"34"},{"size":1315,"mtime":1612625431689,"results":"58","hashOfConfig":"34"},{"size":798,"mtime":1612378299121,"results":"59","hashOfConfig":"34"},{"size":1504,"mtime":1612378959369,"results":"60","hashOfConfig":"34"},{"size":3021,"mtime":1612381240407,"results":"61","hashOfConfig":"34"},{"size":5446,"mtime":1612641970199,"results":"62","hashOfConfig":"34"},{"size":1605,"mtime":1612622326682,"results":"63","hashOfConfig":"34"},{"size":379,"mtime":1607960241618,"results":"64","hashOfConfig":"34"},{"size":338,"mtime":1607549397469,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},"udh8f9",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"87"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"87"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\pages\\SignIn\\index.tsx",["141"],"import React, { useRef, useCallback } from \"react\";\r\nimport { MainContainer, Content, Background, AnimationContainer } from \"./style\";\r\nimport { FiLogIn, FiMail, FiLock } from \"react-icons/fi\";\r\n\r\nimport { FormHandles } from \"@unform/core\";\r\nimport { Form } from \"@unform/web\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { useAuth } from \"../../hooks/Auth\";\r\nimport { useToast } from \"../../hooks/Toast\";\r\nimport getValidationErrors from \"../../utils/getValidationErrors\";\r\n\r\nimport Button from \"../../components/button\";\r\nimport Input from \"../../components/input\";\r\n\r\nimport logoImg from \"../../assets/logo.svg\";\r\n\r\ninterface SignInFormData {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nconst SignIn: React.FC = () => {\r\n  const formRef = useRef<FormHandles>(null);\r\n\r\n  const { signIn, user } = useAuth();\r\n  const { addToast } = useToast();\r\n  const history = useHistory();\r\n\r\n  console.log(user);\r\n\r\n  const handleSubmit = useCallback(\r\n    async (data: SignInFormData) => {\r\n      try {\r\n        formRef.current?.setErrors({});\r\n        const schema = Yup.object().shape({\r\n          email: Yup.string()\r\n            .required(\"E-mail Obrigatório\")\r\n            .email(\"E-mail inválido\"),\r\n          password: Yup.string().required(\"Senha Obrigatória\"),\r\n        });\r\n\r\n        await schema.validate(data, {\r\n          abortEarly: false,\r\n        });\r\n\r\n        await signIn({\r\n          email: data.email,\r\n          password: data.password,\r\n        });\r\n\r\n        history.push('/Dashboard');\r\n      } catch (err) {\r\n        if (err instanceof Yup.ValidationError) {\r\n          const errors = getValidationErrors(err);\r\n          formRef.current?.setErrors(errors);\r\n\r\n          return;\r\n        }\r\n\r\n        addToast({\r\n          title: \"Erro na autenticação\",\r\n          type: \"error\",\r\n          description:\r\n            \"Ocorreu um erro ao fazer login, cheque suas credenciais\",\r\n        });\r\n      }\r\n    },\r\n    [signIn, addToast]\r\n  );\r\n\r\n  return (\r\n    <MainContainer>\r\n      <Content>\r\n        <AnimationContainer>\r\n          <img src={logoImg} alt=\"\" />\r\n            <Form ref={formRef} onSubmit={handleSubmit}>\r\n              <h1>Faça seu login</h1>\r\n              <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\r\n              <Input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              icon={FiLock}\r\n              placeholder=\"Senha\"\r\n              />\r\n              <Button type=\"submit\">Entrar</Button>\r\n            </Form>\r\n          <Link to=\"/forgot-password\">Esqueci minha senha</Link>\r\n          <Link to=\"/SignUp\">\r\n          <FiLogIn size={20} />\r\n          Criar conta\r\n          </Link>\r\n        </AnimationContainer>\r\n      </Content>\r\n      <Background />\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n",["142","143"],"C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\pages\\SignUp\\index.tsx",[],["144","145"],"C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\pages\\SignIn\\style.ts",[],["146","147"],"C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\pages\\SignUp\\styles.ts",[],"C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\hooks\\Auth.tsx",[],"C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\styles\\global.ts",[],["148","149"],"C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\hooks\\Toast.tsx",[],"C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\components\\button\\index.tsx",[],["150","151"],"C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\components\\input\\style.ts",[],"C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\components\\button\\style.ts",[],"C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\components\\input\\index.tsx",[],"C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\routes\\index.tsx",[],"C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\pages\\Dashboard\\styles.ts",[],"C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\routes\\Route.tsx",["152"],"import React, { ComponentType } from 'react';\r\nimport {useAuth} from '../hooks/Auth';\r\n\r\nimport {\r\n  Route as ReactDOMRoute,\r\n  RouteProps as ReactDOMRouteProps,\r\n  Redirect\r\n} from 'react-router-dom';\r\ninterface RouteProps extends ReactDOMRouteProps  {\r\n  isPrivate?: boolean;\r\n  component: React.ComponentType;\r\n}\r\n\r\nconst Route: React.FC<RouteProps> = ({ isPrivate = false, component: Component, ...rest}) => {\r\n  const {token} = useAuth();\r\n\r\n  return (\r\n    <ReactDOMRoute \r\n    {...rest}\r\n    render={({location}) => {\r\n      return isPrivate === !!token ? (\r\n        <Component/>\r\n      ) : (\r\n        <Redirect to={{\r\n          pathname: isPrivate ? '/' : '/Dashboard',\r\n          state: {from: location}\r\n        }}/>\r\n      )\r\n    }}\r\n    />\r\n      \r\n  )\r\n};\r\n\r\nexport default Route;","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\pages\\Dashboard\\index.tsx",["153","154"],"import React, { useState, useCallback, useEffect, useMemo } from \"react\";\r\nimport { isToday, format, isAfter } from \"date-fns\";\r\nimport ptBR from \"date-fns/locale/pt-BR\";\r\nimport { FiClock, FiPower } from \"react-icons/fi\";\r\nimport DayPicker, { DayModifiers } from \"react-day-picker\";\r\nimport \"react-day-picker/lib/style.css\";\r\n\r\nimport {\r\n  Container,\r\n  Header,\r\n  HeaderContent,\r\n  Profile,\r\n  Content,\r\n  Schedule,\r\n  Calendar,\r\n  NextAppointment,\r\n  Section,\r\n  Appointment,\r\n} from \"./styles\";\r\nimport LogoImg from \"../../assets/logo.svg\";\r\nimport { useAuth } from \"../../hooks/Auth\";\r\nimport api from \"../../services/api\";\r\nimport { parseISO } from \"date-fns/esm\";\r\nimport { is } from \"date-fns/locale\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface MonthAvailabilityItem {\r\n  day: number;\r\n  available: boolean;\r\n}\r\n\r\ninterface Appointment {\r\n  id: string;\r\n  date: string;\r\n  formattedHour: string;\r\n  user: {\r\n    name: string;\r\n    avatar_url: string;\r\n  };\r\n}\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [currentMonth, setCurrentMonth] = useState(new Date());\r\n  const [monthAvailability, setMonthAvailability] = useState<\r\n    MonthAvailabilityItem[]\r\n  >([]);\r\n\r\n  const [appointments, setAppointments] = useState<Appointment[]>([]);\r\n\r\n  const { signOut, user } = useAuth();\r\n\r\n  const handleDateChange = useCallback((day: Date, modifiers: DayModifiers) => {\r\n    if (modifiers.available && !modifiers.disabled) {\r\n      setSelectedDate(day);\r\n    }\r\n  }, []);\r\n\r\n  const handleMonthChange = useCallback((month: Date) => {\r\n    setCurrentMonth(month);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(`/providers/${user.id}/month-availability`, {\r\n        params: {\r\n          year: currentMonth.getFullYear(),\r\n          month: currentMonth.getMonth() + 1,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setMonthAvailability(response.data);\r\n      });\r\n  }, [currentMonth, user.id]);\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get<Appointment[]>(\"/appointments/me\", {\r\n        params: {\r\n          year: selectedDate.getFullYear(),\r\n          month: selectedDate.getMonth() + 1,\r\n          day: selectedDate.getDate(),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const appointmentsFormatted = response.data.map((appointment) => {\r\n          return {\r\n            ...appointment,\r\n            formattedHour: format(parseISO(appointment.date), \"HH:mm\"),\r\n          };\r\n        });\r\n        setAppointments(appointmentsFormatted);\r\n      });\r\n  }, [selectedDate]);\r\n\r\n  const disabledDays = useMemo(() => {\r\n    const dates = monthAvailability\r\n      .filter((monthDay) => monthDay.available === false)\r\n      .map((monthDay) => {\r\n        const year = currentMonth.getFullYear();\r\n        const month = currentMonth.getMonth();\r\n        return new Date(year, month, monthDay.day);\r\n      });\r\n\r\n    return dates;\r\n  }, [currentMonth, monthAvailability]);\r\n\r\n  const selectedDateAsText = useMemo(() => {\r\n    return format(selectedDate, \"'Dia' dd 'de' MMMM\", {\r\n      locale: ptBR,\r\n    });\r\n  }, [selectedDate]);\r\n\r\n  const selectedWeekDay = useMemo(() => {\r\n    return format(selectedDate, \"cccc\", {\r\n      locale: ptBR,\r\n    });\r\n  }, [selectedDate]);\r\n\r\n  const morningAppointments = useMemo(() => {\r\n    return appointments.filter((appointment) => {\r\n      return parseISO(appointment.date).getHours() < 12;\r\n    });\r\n  }, [appointments]);\r\n\r\n  const afternoonAppointments = useMemo(() => {\r\n    return appointments.filter((appointment) => {\r\n      return parseISO(appointment.date).getHours() >= 12;\r\n    });\r\n  }, [appointments]);\r\n\r\n  const nextAppointment = useMemo(() => {\r\n    return appointments.find((appointment) =>\r\n      isAfter(parseISO(appointment.date), new Date())\r\n    );\r\n  }, [appointments]);\r\n\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <HeaderContent>\r\n          <img src={LogoImg} alt=\"GoBarber\" />\r\n          <Profile>\r\n            <img src={user.avatar_url} alt={user.name} />\r\n            <div>\r\n              <span>Bem vindo,</span>\r\n              <Link to=\"/profile\"><strong>{user.name}</strong></Link>\r\n            </div>\r\n          </Profile>\r\n          <button type=\"button\" onClick={signOut}>\r\n            <FiPower size={30} />\r\n          </button>\r\n        </HeaderContent>\r\n      </Header>\r\n\r\n      <Content>\r\n        <Schedule>\r\n          <h1>Hórarios agendados</h1>\r\n          <p>\r\n            {isToday(selectedDate) && <span> Hoje |</span>}\r\n            <span> {selectedDateAsText} |</span>\r\n            <span> {selectedWeekDay}</span>\r\n          </p>\r\n          {isToday(selectedDate) && nextAppointment && (\r\n            <NextAppointment>\r\n              <strong>Agendamento a seguir</strong>\r\n              <div>\r\n                <img\r\n                  src={nextAppointment.user.avatar_url}\r\n                  alt={nextAppointment.user.name}\r\n                />\r\n                <h2>{nextAppointment.user.name}</h2>\r\n                <FiClock size={25} color=\"#ff9000\" />\r\n                <span>{nextAppointment.formattedHour}</span>\r\n              </div>\r\n            </NextAppointment>\r\n          )}\r\n          <Section>\r\n            <span>Manhã</span>\r\n\r\n            {morningAppointments.length === 0 && (\r\n              <p>Nenhum agendamento nesse período</p>\r\n            )}\r\n\r\n            {morningAppointments.map((appointment) => (\r\n              <Appointment key={appointment.id}>\r\n                <span>\r\n                  <FiClock size={20} color=\"#ff9000\" />\r\n                  {appointment.formattedHour}\r\n                </span>\r\n                <div>\r\n                  <img\r\n                    src={appointment.user.avatar_url}\r\n                    alt={appointment.user.name}\r\n                  />\r\n                  <h4>{appointment.user.name}</h4>\r\n                </div>\r\n              </Appointment>\r\n            ))}\r\n          </Section>\r\n          <Section>\r\n            <span>Tarde</span>\r\n\r\n            {afternoonAppointments.length === 0 && (\r\n              <p>Nenhum agendamento nesse período</p>\r\n            )}\r\n\r\n            {afternoonAppointments.map((appointment) => (\r\n              <Appointment key={appointment.id}>\r\n                <span>\r\n                  <FiClock size={20} color=\"#ff9000\" />\r\n                  {appointment.formattedHour}\r\n                </span>\r\n                <div>\r\n                  <img\r\n                    src={appointment.user.avatar_url}\r\n                    alt={appointment.user.name}\r\n                  />\r\n                  <h4>{appointment.user.name}</h4>\r\n                </div>\r\n              </Appointment>\r\n            ))}\r\n          </Section>\r\n        </Schedule>\r\n        <Calendar>\r\n          <DayPicker\r\n            weekdaysShort={[\"D\", \"S\", \"T\", \"Q\", \"Q\", \"S\", \"S\"]}\r\n            fromMonth={new Date()}\r\n            disabledDays={[{ daysOfWeek: [0, 6] }, ...disabledDays]}\r\n            modifiers={{\r\n              available: { daysOfWeek: [1, 2, 3, 4, 5] },\r\n            }}\r\n            onMonthChange={handleMonthChange}\r\n            selectedDays={selectedDate}\r\n            onDayClick={handleDateChange}\r\n            months={[\r\n              \"Janeiro\",\r\n              \"Fevereiro\",\r\n              \"Março\",\r\n              \"Abril\",\r\n              \"Maio\",\r\n              \"Junho\",\r\n              \"Julho\",\r\n              \"Agosto\",\r\n              \"Setembro\",\r\n              \"Outubro\",\r\n              \"Novembro\",\r\n              \"Dezembro\",\r\n            ]}\r\n          />\r\n        </Calendar>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;","C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\components\\Tooltip\\index.tsx",[],"C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\pages\\ForgotPassword\\style.ts",[],"C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\pages\\ForgotPassword\\index.tsx",["155","156"],"import React, { useRef, useState, useCallback } from \"react\";\r\nimport { MainContainer, Content, Background, AnimationContainer } from \"./style\";\r\nimport { FiLogIn, FiMail, FiLock } from \"react-icons/fi\";\r\n\r\nimport { FormHandles } from \"@unform/core\";\r\nimport { Form } from \"@unform/web\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { useToast } from \"../../hooks/Toast\";\r\nimport getValidationErrors from \"../../utils/getValidationErrors\";\r\n\r\nimport Button from \"../../components/button\";\r\nimport Input from \"../../components/input\";\r\n\r\nimport logoImg from \"../../assets/logo.svg\";\r\nimport api from \"../../services/api\";\r\n\r\ninterface ForgotPasswordFormData {\r\n  email: string;\r\n}\r\n\r\nconst ForgotPassword: React.FC = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const formRef = useRef<FormHandles>(null);\r\n\r\n  const { addToast } = useToast();\r\n  //const history = useHistory();\r\n\r\n  const handleSubmit = useCallback(\r\n    async (data: ForgotPasswordFormData) => {\r\n      try {\r\n        setLoading(true);\r\n        formRef.current?.setErrors({});\r\n        const schema = Yup.object().shape({\r\n          email: Yup.string()\r\n            .required(\"E-mail Obrigatório\")\r\n            .email(\"E-mail inválido\"),\r\n        });\r\n\r\n        await schema.validate(data, {\r\n          abortEarly: false,\r\n        });\r\n\r\n        await api.post('/password/forgot', {\r\n          email: data.email\r\n        });\r\n\r\n        addToast({\r\n          type: 'success',\r\n          title: 'E-mail de recuperação enviado',\r\n          description:\r\n            'Enviamos um e-mail para confirmar a recuperação de senha, cheque sua caixa de entrada'\r\n        });\r\n\r\n      } catch (err) {\r\n        if (err instanceof Yup.ValidationError) {\r\n          const errors = getValidationErrors(err);\r\n          formRef.current?.setErrors(errors);\r\n\r\n          return;\r\n        }\r\n\r\n        addToast({\r\n          title: \"Erro na recuperação de senha\",\r\n          type: \"error\",\r\n          description:\r\n            \"Ocorreu um erro ao tentar realizar a recuperação de senha, tente novamente\",\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    },\r\n    [addToast]\r\n  );\r\n\r\n  return (\r\n    <MainContainer>\r\n      <Content>\r\n        <AnimationContainer>\r\n          <img src={logoImg} alt=\"\" />\r\n            <Form ref={formRef} onSubmit={handleSubmit}>\r\n              <h1>Recuperar senha</h1>\r\n              <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\r\n              <Button loading={!!loading}type=\"submit\">Recuperar</Button>\r\n            </Form>\r\n          <Link to=\"/\">\r\n          <FiLogIn size={20} />\r\n          Voltar ao login\r\n          </Link>\r\n        </AnimationContainer>\r\n      </Content>\r\n      <Background />\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n",["157","158"],"C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\index.tsx",[],"C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\hooks\\index.tsx",[],"C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\services\\api.ts",[],["159","160"],"C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\components\\ToastContainer\\styles.ts",[],"C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\components\\Toast\\index.tsx",[],"C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\components\\Tooltip\\styles.ts",[],"C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\components\\Toast\\styles.ts",[],"C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\components\\ToastContainer\\index.tsx",[],"C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\pages\\ResetPassword\\style.ts",[],"C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\pages\\ResetPassword\\index.tsx",[],"C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\pages\\Profile\\index.tsx",[],"C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\pages\\Profile\\style.ts",[],"C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\App.tsx",[],"C:\\Users\\bruno\\Desktop\\06-gobarber-web\\src\\utils\\getValidationErrors.ts",[],{"ruleId":"161","severity":1,"message":"162","line":70,"column":5,"nodeType":"163","endLine":70,"endColumn":23,"suggestions":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"165","replacedBy":"169"},{"ruleId":"167","replacedBy":"170"},{"ruleId":"165","replacedBy":"171"},{"ruleId":"167","replacedBy":"172"},{"ruleId":"165","replacedBy":"173"},{"ruleId":"167","replacedBy":"174"},{"ruleId":"165","replacedBy":"175"},{"ruleId":"167","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":30},{"ruleId":"177","severity":1,"message":"181","line":24,"column":10,"nodeType":"179","messageId":"180","endLine":24,"endColumn":12},{"ruleId":"182","severity":1,"message":"183","line":32,"column":11,"nodeType":"179","messageId":"184","endLine":32,"endColumn":22},{"ruleId":"177","severity":1,"message":"185","line":3,"column":27,"nodeType":"179","messageId":"180","endLine":3,"endColumn":33},{"ruleId":"177","severity":1,"message":"186","line":7,"column":16,"nodeType":"179","messageId":"180","endLine":7,"endColumn":26},{"ruleId":"165","replacedBy":"187"},{"ruleId":"167","replacedBy":"188"},{"ruleId":"165","replacedBy":"189"},{"ruleId":"167","replacedBy":"190"},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["191"],"no-native-reassign",["192"],"no-negated-in-lhs",["193"],["192"],["193"],["192"],["193"],["192"],["193"],["192"],["193"],"@typescript-eslint/no-unused-vars","'ComponentType' is defined but never used.","Identifier","unusedVar","'is' is defined but never used.","@typescript-eslint/no-redeclare","'Appointment' is already defined.","redeclared","'FiLock' is defined but never used.","'useHistory' is defined but never used.",["192"],["193"],["192"],["193"],{"desc":"194","fix":"195"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [signIn, history, addToast]",{"range":"196","text":"197"},[1978,1996],"[signIn, history, addToast]"]